                             HTML

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <link rel="stylesheet" href="style.css">
    <title>Jogo da Velha</title>
</head>
<body>
    <h1>Jogo da Velha</h1>
    <div id="buttons-container">
        <button id="2-players">2 Jogadores</button>
        <button id="ia-player">Contra IA</button>
    </div>

    <div id="container" class="hide">
        <div class="box" id="block-1"></div>
        <div class="box" id="block-2"></div>
        <div class="box" id="block-3"></div>
        <div class="box" id="block-4"></div>
        <div class="box" id="block-5"></div>
        <div class="box" id="block-6"></div>
        <div class="box" id="block-7"></div>
        <div class="box" id="block-8"></div>
        <div class="box" id="block-9"></div>

        <div id="scoreboard-container">
            <span class="score-box">
                <span id="x-scoreboard">X</span>
                <span id="scoreboard-1">0</span>
            </span>
            <span class="score-box">
                <span id="o-scoreboard"></span>
                <span id="scoreboard-2">0</span>
            </span>
        </div>
    </div>

    <div class="hide">
        <div class="x">X</div>
        <div class="o"></div>
    </div>

    <div id="messagem" class="hide">
        <p></p>
    </div>
    
<script src="main.js"></script>    
</body>
</html>

                       STYLE.CSS


body{
    text-align: center;
    font-family: Arial, Helvetica, sans-serif;
}

h1{
    font-size: 42px;
}

/* Botões */

#buttons-container button{
    border: none;
    padding: 10px 20px;
    margin: 0 10px;
}

/* Jogo */

#container{
    display: flex;
    width: 300px;
    margin: 0;
    flex-direction: row;
    flex-wrap: wrap;
    position: relative;
    margin-left: auto;
    margin-right: auto;
}

.box{
    height: 100px;
    border: 5px solid #000;
    box-sizing: border-box;
    flex: 1 1 33%;
}

#block-1, #block-2, #block-3{
    border-top: none;
}

#block-1, #block-4, #block-7{
    border-left: none;
}

#block-7, #block-8, #block-9{
    border-bottom: none;
}

#block-3, #block-6, #block-9{
    border-right: none;
}

/* simbolos */

.x{
    font-size: 65px;
    color: red;
    display: inline-block;
    line-height: 100px;
}

.o{
    width: 50px;
    height: 50px;
    border: 5px solid green;
    border-radius: 50%;
    display: inline-block;
    margin-top: 17px;
}

/* Classe de esconder */

.hide{
    display: none !important;
}

/* placar */

#scoreboard-container{
    font-weight: bold;
    margin-top: 30px;
    font-size: 25px;
    position: relative;
    margin-left: auto;
    margin-right: auto;
}

.score-box{
    margin: 0 20px;
}

#x-scoreboard{
    color: red;
    margin-right: 5px;
}

#o-scoreboard{
    width: 15px;
    height: 15px;
    border: 2px solid green;
    border-radius: 50%;
    display: inline-block;
    margin-right: 5px;
}

/* MSG DE VITORIA */

#message p{
    position: absolute;
    margin-left: auto;
    margin-right: auto;
    left: 0;
    right: 0;
    top: 150px;
    width: 500px;
    font-size: 50px;
    background-color: #000;
    color: #fff;
    padding: 20px;
}

                        MAIN.JS

let x = document.querySelector(".x");
let o = document.querySelector(".o");
let boxes = document.querySelectorAll(".box");
let buttons = document.querySelectorAll("#buttons-container button");
let messageContainer = document.querySelector("#message");
let messageText = document.querySelector("#message p");
let secondPlayer;

// Contador de jogo

let player1 = 0;
let player2 = 0;

//Adicionando o evento de click aos eventos 
for(let i = 0; i < boxes.length; i++){

    //quando alguém clica na caixa
    boxes[i].addEventListener("click",function(){
        let el = checkEl(player1, player2);

        //verifica se já tem X ou O

        if(this.childNodes.length == 0) {
           
            let cloneEl = el.cloneNode(true);

            this.appendChild(cloneEl);
    
            // Computar jogada
    
            if(player1 == player2) {
                player1++;

                if(secondPlayer == "ia-player"){
                    computerPlay();
                    player2++;  
                }
            } else {
                player2++;
            }

            // verifica quem ganhou
            checkWinCondition();

        }
    });
};

// Evento para saber se é 2 player ou IA

for(let i = 0; i < buttons.length; i++){
    buttons[i].addEventListener("click", function(){
        secondPlayer = this.getAttribute("id");

        for(let j = 0; j < buttons.length; j++){
            buttons[j].style.display = "none" ;
        }

        setTimeout(function(){
            let container = document.querySelector("#container");
            container.classList.remove("hide");
        },500);
    });
}

// ve quem vai jogar 

function checkEl(player1, player2){
    if(player1 == player2) {
        // x
        el = x;
    } else {
        // o 
        el = o
    }

    return el;

};

// função para determinar ganhador

function checkWinCondition(){

    let b1 = document.getElementById("block-1");
    let b2 = document.getElementById("block-2");
    let b3 = document.getElementById("block-3");
    let b4 = document.getElementById("block-4");
    let b5 = document.getElementById("block-5");
    let b6 = document.getElementById("block-6");
    let b7 = document.getElementById("block-7");
    let b8 = document.getElementById("block-8");
    let b9 = document.getElementById("block-9");

    //Horzional

    if(b1.childNodes.length > 0 && b2.childNodes.length > 0 && b3.childNodes.length > 0){

        let b1Child = b1.childNodes[0].className;
        let b2Child = b2.childNodes[0].className;
        let b3Child = b3.childNodes[0].className;

        if(b1Child == "x" && b2Child == "x" && b3Child == "x"){
            //x
            declareWinner("x");      
        } else if(b1Child == "o" && b2Child == "o" && b3Child == "o") {
            //o
            declareWinner("o");      
        }
    }

    if(b4.childNodes.length > 0 && b5.childNodes.length > 0 && b6.childNodes.length > 0){

        let b4Child = b4.childNodes[0].className;
        let b5Child = b5.childNodes[0].className;
        let b6Child = b6.childNodes[0].className;

        if(b4Child == "x" && b5Child == "x" && b6Child == "x"){
            //x
            declareWinner("x"); 
            } else if(b4Child == "o" && b5Child == "o" && b6Child == "o") {
            //o
            declareWinner("o"); 
        }
    }

    if(b7.childNodes.length > 0 && b8.childNodes.length > 0 && b9.childNodes.length > 0){

        let b7Child = b7.childNodes[0].className;
        let b8Child = b8.childNodes[0].className;
        let b9Child = b9.childNodes[0].className;

        if(b7Child == "x" && b8Child == "x" && b9Child == "x"){
            //x
            declareWinner("x");
        } else if(b7Child == "o" && b8Child == "o" && b9Child == "o") {
            //o
            declareWinner("o");
        }
    }

    //Vertical

    if(b1.childNodes.length > 0 && b4.childNodes.length > 0 && b7.childNodes.length > 0){

        let b1Child = b1.childNodes[0].className;
        let b4Child = b4.childNodes[0].className;
        let b7Child = b7.childNodes[0].className;

        if(b1Child == "x" && b4Child == "x" && b7Child == "x"){
            //x
            declareWinner("x");
        } else if(b1Child == "o" && b4Child == "o" && b7Child == "o") {
            //o
            declareWinner("o");
        }
    }

    if(b2.childNodes.length > 0 && b5.childNodes.length > 0 && b8.childNodes.length > 0){

        let b2Child = b2.childNodes[0].className;
        let b5Child = b5.childNodes[0].className;
        let b8Child = b8.childNodes[0].className;

        if(b2Child == "x" && b5Child == "x" && b8Child == "x"){
            //x
            declareWinner("x");
        } else if(b2Child == "o" && b5Child == "o" && b8Child == "o") {
            //o
            declareWinner("o");
        }
    }

    if(b3.childNodes.length > 0 && b6.childNodes.length > 0 && b9.childNodes.length > 0){

        let b3Child = b3.childNodes[0].className;
        let b6Child = b6.childNodes[0].className;
        let b9Child = b9.childNodes[0].className;

        if(b3Child == "x" && b6Child == "x" && b9Child == "x"){
            //x
            declareWinner("x");
        } else if(b3Child == "o" && b6Child == "o" && b9Child == "o") {
            //o
            declareWinner("o");
        }
    }

        //Diagonal

        if(b1.childNodes.length > 0 && b5.childNodes.length > 0 && b9.childNodes.length > 0){

            let b1Child = b1.childNodes[0].className;
            let b5Child = b5.childNodes[0].className;
            let b9Child = b9.childNodes[0].className;
    
            if(b1Child == "x" && b5Child == "x" && b9Child == "x"){
                //x
                declareWinner("x");
            } else if(b1Child == "o" && b5Child == "o" && b9Child == "o") {
                //o
                declareWinner("o");
            }
        }

        if(b3.childNodes.length > 0 && b5.childNodes.length > 0 && b7.childNodes.length > 0){

            let b3Child = b3.childNodes[0].className;
            let b5Child = b5.childNodes[0].className;
            let b7Child = b7.childNodes[0].className;
    
            if(b3Child == "x" && b5Child == "x" && b7Child == "x"){
                //x
                declareWinner("x");
            } else if(b3Child == "o" && b5Child == "o" && b7Child == "o") {
                //o
                declareWinner("o");
            }
        }

        //Deu velha

        let counter = 0;

        for(let i = 0; i < boxes.length; i++){
            if(boxes[i].childNodes[0] != undefined){
                counter++;
            }
        }

        if(counter == 9){
            declareWinner("Deu Velha");        }
    }

    // Limpa o Jogo 

    function declareWinner(winner){
        let scoreboardX = document.querySelector("#scoreboard-1");
        let scoreboardO = document.querySelector("#scoreboard-2");
        let msg = "";

        if(winner == "x") {
            scoreboardX.textContent = parseInt(scoreboardX.textContent) + 1;
            msg = "O Jogador 1 Venceu";
        } else if (winner == "o") {
            scoreboardO.textContent = parseInt(scoreboardO.textContent) + 1;
            msg = "O Jogador 2 Venceu";
        } else {
            msg = "Deu Velha"
        }

        // Exibe Mensagem

        messageText.innerHTML = msg;
        messageContainer.classList.remove("hide");

        // Esconde mensagem 

        setTimeout(function() {
            messageContainer.classList.add("hide")
        }, 1500);

        // Zera jogadas

        player1 = 0;
        player2 = 0;

        // Remove X e O

        let boxesToRemove = document.querySelectorAll(".box div");

        for(let i = 0; i < boxesToRemove.length; i++){
            boxesToRemove[i].parentNode.removeChild(boxesToRemove[i]);
        }
    }

    // Executar a lógica da IA

    function computerPlay(){
        let cloneO = o.cloneNode(true);

        counter = 0;
        filled = 0;

        for(let i = 0; i < boxes.length; i++){
            let randomNumber = Math.floor(Math.random() * 5);

            if(boxes[i].childNodes[0] == undefined){
                if(randomNumber <= 1){
                    boxes[i].appendChild(cloneO);
                    counter++;
                    break;
                }
            } else {
                filled++;
            }
        }
    }
    
    if(counter == 0 && filled < 9){
        computerPlay();
    }